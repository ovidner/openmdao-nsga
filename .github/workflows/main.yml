name: Build and test
on:
- push
- pull_request
- release
jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - name: Install build dependencies
      id: conda-conf
      run: |
        conda config --append channels conda-forge
        conda install -y anaconda-project conda-build
        echo "::set-output name=root::$CONDA"
    - name: Retrieve the source code
      uses: actions/checkout@v2
      with:
        # Include all history to get tags etc.
        fetch-depth: 0
    - name: Build the package
      run: conda build conda --no-test
    - name: Reduce the size of the build artifact
      run: rm -rf ${{ steps.conda-conf.outputs.root }}/conda-bld/{git_cache,work,anaconda-project*,*/.cache}
    - name: Upload the build artifact
      uses: actions/upload-artifact@v2
      with:
        name: package-${{ github.sha }}
        path: ${{ steps.conda-conf.outputs.root }}/conda-bld

  test:
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    needs: package
    strategy:
      fail-fast: false
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        - windows-latest
        pyver:
        - 3.7
        - 3.8
        - 3.9
        omver:
        - 3.5
        - 3.6
        - 3.7
    steps:
    - name: Setup Conda
      id: conda-conf
      run: |
        echo "::set-output name=root::$CONDA"
        source ${{ steps.conda-conf.outputs.root }}/etc/profile.d/conda.sh
        conda config --append channels conda-forge
    - name: Retrieve the source code
      uses: actions/checkout@v2
    - name: Download the build artifact
      uses: actions/download-artifact@v2
      with:
        name: package-${{ github.sha }}
        path: ${{ steps.conda-conf.outputs.root }}/conda-bld
    - name: Build the test environment
      run: |
          source ${{ steps.conda-conf.outputs.root }}/etc/profile.d/conda.sh
          conda create -y -n test-env python=${{ matrix.pyver }} openmdao=${{ matrix.omver }} local::openmdao-nsga
    - name: Run the tests
      run: |
          source ${{ steps.conda-conf.outputs.root }}/etc/profile.d/conda.sh
          conda activate test-env
          pytest

  upload:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@v2
    - name: Download the build artifacts
      uses: actions/download-artifact@v2
      with:
        name: package-${{ github.sha }}
        path: conda-bld
    - name: Upload to anaconda.org
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        source $CONDA/bin/activate
        conda install -y anaconda-client
        [[ "$GITHUB_REF" =~ ^refs/tags/ ]] || export LABEL="--label dev"
        anaconda --verbose --token $ANACONDA_TOKEN upload --user ctools $LABEL conda-bld/*/*.tar.bz2 --force
